x-swagger-router-controller: users

get:
  tags:
  - users
  summary: List all users with or without filters and sorting
  operationId: getUsers
  security:
  - Bearer: []
  parameters: # TODO: filters and sort
  - in: query
    name: select
    required: false
    type: array
    collectionFormat: csv
    uniqueItems: true
    items:
      type: string
      enum:
      - userId
      - role
      - name
      - companyId
      - address
      - phoneNumber
      - longitude
      - latitude
      - cash
  responses:
    200:
      description: OK
      schema:
        type: array
        items:
          $ref: '#/definitions/User'
    400:
      $ref: '#/responses/ClientError'

post:
  tags:
  - users
  summary: Create User
  operationId: createUser
  security:
  - Bearer: []
  x-security-scopes:
  - admin
  parameters:
  - in: query
    name: select
    required: false
    type: array
    collectionFormat: csv
    uniqueItems: true
    items:
      type: string
      enum:
      - userId
      - role
      - name
      - companyId
      - address
      - phoneNumber
      - longitude
      - latitude
      - cash
      - password
  - in: body
    name: user
    required: true
    schema:
      $ref: '#/definitions/UserCreate'
  responses:
    200:
      description: OK
      schema:
        $ref: '#/definitions/UserPassword'
    400:
      $ref: '#/responses/ClientError'