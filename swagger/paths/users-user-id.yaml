x-swagger-router-controller: users

parameters:
- in: path
  name: userId
  required: true
  # NOTE: it is BigInt type, but I am not able to reference it
  type: string
  description: A BitInt value in string format showing user id to alter
  pattern: ^\d{1,19}$

get:
  tags:
  - users
  summary: Get user by email
  operationId: getUser
  security:
  - Bearer: []
  x-security-scopes:
  - admin
  parameters:
  - in: query
    name: select
    required: false
    type: array
    collectionFormat: csv
    uniqueItems: true
    items:
      type: string
      enum:
      - userId
      - email
      - role
      - name
      - companyId
      - longitude
      - latitude
  responses:
    200:
      description: OK
      schema:
        type: array
        items:
          $ref: '#/definitions/User'
    400:
      $ref: '#/responses/ClientError'

patch:
  tags:
  - users
  summary: Update User.
  description: |
    _If no select field specifed no user will be returned_
    - If password is set to empty string it will be automatically generated
    - For admin **always** specify userId
  operationId: updateUser
  security:
  - Bearer: []
  parameters:
  - in: query
    name: select
    required: false
    type: array
    collectionFormat: csv
    uniqueItems: true
    items:
      type: string
      enum:
      - userId
      - email
      - role
      - name
      - companyId
      - address
      - phoneNumber
      - longitude
      - latitude
      - cash
      - password
  - in: body
    name: user
    required: true
    schema:
      $ref: '#/definitions/UserUpdate'
  responses:
    200:
      description: OK
      schema:
        $ref: '#/definitions/UserPassword'
    400:
      $ref: '#/responses/ClientError'
    403:
      $ref: '#/responses/Forbidden'

delete:
  tags:
  - users
  summary: Delete User.
  description: |
    _If no select field specifed no user will be returned_
    - For admin **always** specify userId
  operationId: deleteUser
  security:
  - Bearer: []
  parameters:
  - in: query
    name: select
    required: false
    type: array
    collectionFormat: csv
    uniqueItems: true
    items:
      type: string
      enum:
      - userId
      - email
      - role
      - name
      - companyId
      - address
      - phoneNumber
      - longitude
      - latitude
      - cash
  responses:
    200:
      description: OK
      schema:
        $ref: '#/definitions/UserPassword'
    400:
      $ref: '#/responses/ClientError'
    403:
      $ref: '#/responses/Forbidden'